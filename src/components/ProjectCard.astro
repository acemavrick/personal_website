---
import type { Project } from '../types/project';

interface Props {
  project: Project;
  index: number;
}

const { project, index } = Astro.props;

// map image_fit to tailwind classes (avoid dynamic class purge)
const objectFitClass = (
  project.image_fit === 'contain' ? 'object-contain' :
  project.image_fit === 'fill' ? 'object-fill' :
  project.image_fit === 'none' ? 'object-none' :
  project.image_fit === 'scale-down' ? 'object-scale-down' :
  'object-cover'
);

// cycle through accent colors
const accentColors = [
  { bg: 'bg-sky-50 dark:bg-sky-950/20', border: 'border-sky-200 dark:border-sky-900/50', text: 'text-sky-600 dark:text-sky-400', hover: 'hover:border-sky-300 dark:hover:border-sky-800' },
  { bg: 'bg-teal-50 dark:bg-teal-950/20', border: 'border-teal-200 dark:border-teal-900/50', text: 'text-teal-600 dark:text-teal-400', hover: 'hover:border-teal-300 dark:hover:border-teal-800' },
  { bg: 'bg-rose-50 dark:bg-rose-950/20', border: 'border-rose-200 dark:border-rose-900/50', text: 'text-rose-600 dark:text-rose-400', hover: 'hover:border-rose-300 dark:hover:border-rose-800' }
];

const accent = accentColors[index % accentColors.length];

const buttonColors = [
  'from-sky-500 to-teal-500 hover:from-sky-600 hover:to-teal-600',
  'from-teal-500 to-emerald-500 hover:from-teal-600 hover:to-emerald-600',
  'from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600'
];

const buttonColor = buttonColors[index % buttonColors.length];
---

{project.variant === 'comingSoon' ? (
  <article class="relative group overflow-hidden rounded-2xl p-10 md:p-12 text-center transition-all duration-300 hover:-translate-y-1 bg-gradient-to-br from-sky-500/35 via-teal-500/30 to-rose-500/35 ring-1 ring-white/20 dark:ring-white/10 shadow-[0_0_40px_rgba(56,189,248,0.25)]">
    <div class="pointer-events-none absolute -inset-24 -z-10 bg-gradient-to-br from-sky-400/60 via-teal-400/45 to-rose-400/60 blur-3xl opacity-70"></div>
    <div class="relative space-y-4 max-w-2xl mx-auto">
      <h3 class="text-2xl md:text-3xl font-bold tracking-tight text-neutral-900 dark:text-white">
        {project.title}
      </h3>
      <p class="text-neutral-800/80 dark:text-neutral-100/80 leading-relaxed">
        {project.description}
      </p>
    </div>
  </article>
) : (
  <article class={`group border ${accent.border} ${accent.hover} rounded-2xl p-6 md:p-8 transition-all duration-300 hover:-translate-y-1 bg-white/50 dark:bg-neutral-900/50 backdrop-blur-sm`}>
    <div class="grid items-center gap-6 md:grid-cols-5 md:gap-8">
      {project.image && (
        <div class="md:col-span-2">
          <div class="relative aspect-[16/10] overflow-hidden rounded-xl bg-neutral-100 dark:bg-neutral-900">
            <img
              src={project.image}
              alt={project.image_alt ?? `${project.title} preview`}
              class={`h-full w-full ${objectFitClass} transition-transform duration-500 group-hover:scale-105`}
              loading="lazy"
              decoding="async"
              sizes="(min-width: 1024px) 400px, (min-width: 768px) 40vw, 100vw"
            />
          </div>
        </div>
      )}

      <div class={project.image ? 'md:col-span-3' : 'md:col-span-5'}>
        <h3 class={`text-2xl md:text-3xl font-bold tracking-tight ${accent.text} mb-3`}>
          {project.title}
        </h3>

        {project.tags && project.tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-4">
            {project.tags.map((tag: string) => (
              <span class={`inline-flex items-center px-3 py-1 text-xs font-medium rounded-full ${accent.bg} ${accent.text} border ${accent.border}`}>
                {tag}
              </span>
            ))}
          </div>
        )}

        <p class="text-neutral-700 dark:text-neutral-300 leading-relaxed mb-5">
          {project.description}
        </p>

        {project.url && (
          <a
            href={project.url}
            target="_blank"
            rel="noopener noreferrer"
            aria-label={`Open ${project.title}`}
            class={`inline-flex items-center gap-2 px-5 py-2.5 rounded-xl bg-gradient-to-r ${buttonColor} text-white text-sm font-semibold transition-all duration-300 hover:shadow-lg hover:scale-105`}
          >
            View Project
            <svg class="w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
            </svg>
          </a>
        )}
      </div>
    </div>
  </article>
)}