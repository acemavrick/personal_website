---
import type { Project } from '../types/project';

interface Props {
  project: Project;
  index: number;
}

const { project, index } = Astro.props;

// Detect if this is a "coming soon" card
const isComingSoon = !project.url || project.title === "New releases on the horizon";

// map image_fit to tailwind classes (avoid dynamic class purge)
const objectFitClass = (
  project.image_fit === 'contain' ? 'object-contain' :
  project.image_fit === 'fill' ? 'object-fill' :
  project.image_fit === 'none' ? 'object-none' :
  project.image_fit === 'scale-down' ? 'object-scale-down' :
  'object-cover'
);

// cycle through accent colors
const accentColors = [
  { bg: 'bg-sky-50 dark:bg-sky-950/20', border: 'border-sky-200 dark:border-sky-900/50', text: 'text-sky-600 dark:text-sky-400', hover: 'hover:border-sky-300 dark:hover:border-sky-800' },
  { bg: 'bg-teal-50 dark:bg-teal-950/20', border: 'border-teal-200 dark:border-teal-900/50', text: 'text-teal-600 dark:text-teal-400', hover: 'hover:border-teal-300 dark:hover:border-teal-800' },
  { bg: 'bg-rose-50 dark:bg-rose-950/20', border: 'border-rose-200 dark:border-rose-900/50', text: 'text-rose-600 dark:text-rose-400', hover: 'hover:border-rose-300 dark:hover:border-rose-800' }
];

const accent = accentColors[index % accentColors.length];

const buttonColors = [
  'from-sky-500 to-teal-500 hover:from-sky-600 hover:to-teal-600',
  'from-teal-500 to-emerald-500 hover:from-teal-600 hover:to-emerald-600',
  'from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600'
];

const buttonColor = buttonColors[index % buttonColors.length];
---

{isComingSoon ? (
    <!-- Coming Soon Card - Special Glowy Gradient Design -->
    <article class="group relative overflow-hidden rounded-2xl p-8 md:p-12 transition-all duration-500">
        <!-- Animated gradient background with glow -->
        <div class="absolute inset-0 bg-gradient-to-br from-purple-500/90 via-fuchsia-500/90 to-pink-500/90 dark:from-purple-600/95 dark:via-fuchsia-600/95 dark:to-pink-600/95"></div>
        <div class="absolute inset-0 bg-gradient-to-tr from-cyan-400/40 via-transparent to-violet-400/40 opacity-70 group-hover:opacity-90 transition-opacity duration-500"></div>
        
        <!-- Glowy orbs -->
        <div class="absolute top-0 left-1/4 w-64 h-64 bg-violet-400/30 dark:bg-violet-300/20 rounded-full blur-3xl animate-pulse"></div>
        <div class="absolute bottom-0 right-1/4 w-72 h-72 bg-fuchsia-400/30 dark:bg-fuchsia-300/20 rounded-full blur-3xl animate-pulse" style="animation-delay: 1s;"></div>
        
        <!-- Content - Centered -->
        <div class="relative z-10 text-center space-y-5 max-w-3xl mx-auto">
            <!-- Icon/Badge -->
            <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-white/20 dark:bg-white/10 backdrop-blur-sm border border-white/30 mb-2">
                <svg class="w-8 h-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                </svg>
            </div>
            
            <h3 class="text-3xl md:text-4xl font-bold tracking-tight text-white drop-shadow-lg">
                {project.title}
            </h3>
            
            <p class="text-lg md:text-xl text-white/95 leading-relaxed max-w-2xl mx-auto drop-shadow-md font-medium">
                {project.description}
            </p>
            
            <!-- Decorative shimmer line -->
            <div class="flex items-center justify-center gap-2 pt-4">
                <div class="h-px w-12 bg-gradient-to-r from-transparent to-white/40"></div>
                <div class="h-1.5 w-1.5 rounded-full bg-white/60 animate-ping"></div>
                <div class="h-px w-12 bg-gradient-to-l from-transparent to-white/40"></div>
            </div>
        </div>
    </article>
) : (
    <!-- Regular Project Card -->
    <article class={`group border ${accent.border} ${accent.hover} rounded-2xl p-6 md:p-8 transition-all duration-300 hover:-translate-y-1 bg-white/50 dark:bg-neutral-900/50 backdrop-blur-sm`}>
        <div class="grid items-center gap-6 md:grid-cols-5 md:gap-8">
            {project.image && (
                <div class="md:col-span-2">
                    <div class="relative aspect-[16/10] overflow-hidden rounded-xl bg-neutral-100 dark:bg-neutral-900">
                        <img
                            src={project.image}
                            alt={project.image_alt ?? `${project.title} preview`}
                            class={`h-full w-full ${objectFitClass} transition-transform duration-500 group-hover:scale-105`}
                            loading="lazy"
                            decoding="async"
                            sizes="(min-width: 1024px) 400px, (min-width: 768px) 40vw, 100vw"
                        />
                    </div>
                </div>
            )}
            
            <div class={project.image ? 'md:col-span-3' : 'md:col-span-5'}>
                <h3 class={`text-2xl md:text-3xl font-bold tracking-tight ${accent.text} mb-3`}>
                    {project.title}
                </h3>
                
                {project.tags && project.tags.length > 0 && (
                    <div class="flex flex-wrap gap-2 mb-4">
                        {project.tags.map((tag: string) => (
                            <span class={`inline-flex items-center px-3 py-1 text-xs font-medium rounded-full ${accent.bg} ${accent.text} border ${accent.border}`}>
                                {tag}
                            </span>
                        ))}
                    </div>
                )}

                <p class="text-neutral-700 dark:text-neutral-300 leading-relaxed mb-5">
                    {project.description}
                </p>
                
                {project.url && (
                    <a
                        href={project.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        aria-label={`Open ${project.title}`}
                        class={`inline-flex items-center gap-2 px-5 py-2.5 rounded-xl bg-gradient-to-r ${buttonColor} text-white text-sm font-semibold transition-all duration-300 hover:shadow-lg hover:scale-105`}
                    >
                        View Project
                        <svg class="w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                        </svg>
                    </a>
                )}
            </div>
        </div>
    </article>
)}